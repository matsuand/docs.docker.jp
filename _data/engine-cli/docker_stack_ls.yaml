command: docker stack ls
aliases: list
short: Stack の一覧を表示します。
long: |-
  stack の一覧を表示します。

  > **メモ**
  >
  > これはクラスター管理コマンドです。
  > したがって Swarm 上のマネージャーノードにおいて実行する必要があります。
  > マネージャーノードやワーカーノードについては、[Swarm モード](https://docs.docker.com/engine/swarm/) を参照してください。
usage: docker stack ls [OPTIONS]
pname: docker stack
plink: docker_stack.yaml
options:
- option: all-namespaces
  value_type: bool
  default_value: "false"
  description: Kubernetes 名前空間のすべてから Stack を一覧表示します。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: true
  swarm: false
- option: format
  value_type: string
  description: Go 言語のテンプレートを使って、Stack の表示を行います。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: namespace
  value_type: stringSlice
  default_value: '[]'
  description: 対象とする Kubernetes 名前空間を指定します。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: true
  swarm: false
inherited_options:
- option: kubeconfig
  value_type: string
  description: Kubernetes 設定ファイルを指定します。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: true
  swarm: false
- option: orchestrator
  value_type: string
  description: 利用するオーケストレーターを指定します。(swarm|kubernetes|all)
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
examples: |-
  以下のコマンドは、すべての Stack と追加情報を表示します。

  ```bash
  $ docker stack ls

  ID                 SERVICES            ORCHESTRATOR
  myapp              2                   Kubernetes
  vossibility-stack  6                   Swarm
  ```

  ### 書式変更

  書式変更オプション (`--format`) は Go 言語テンプレートを利用して、Stack をわかりやすく出力します。

  Go 言語テンプレートによる記述書式は、以下のとおりです。

  | 記述書式        | 内容説明             |
  | --------------- | -------------------- |
  | `.Name`         | Stack 名             |
  | `.Services`     | サービス数           |
  | `.Orchestrator` | オーケストレーター名 |
  | `.Namespace`    | 名前空間             |

  `--format` オプションを利用すると `stack ls` コマンドは、テンプレートが規定するデータを直接出力します。
  また `table` ディレクティブを利用すると、カラムヘッダーも同時に出力されます。

  以下は、ヘッダーを含めずにテンプレートを利用する例であり、すべての Stack における `Name`、`Services` の各項目がコロン（`:`）で区切って表示されます。

  ```bash
  $ docker stack ls --format "{{.Name}}: {{.Services}}"
  web-server: 1
  web-cache: 4
  ```
deprecated: false
min_api_version: "1.25"
experimental: false
experimentalcli: false
kubernetes: false
swarm: false

