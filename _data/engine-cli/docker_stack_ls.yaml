command: docker stack ls
aliases: list
short: stack の一覧を表示します。
long: |-
  stack の一覧を表示します。

  > **メモ**
  >
  > これはクラスター管理コマンドです。
  > したがって Swarm 上のマネージャーノードにおいて実行する必要があります。
  > マネージャーノードやワーカーノードについては、[Swarm モード](https://docs.docker.com/engine/swarm/) を参照してください。
usage: docker stack ls [OPTIONS]
pname: docker stack
plink: docker_stack.yaml
options:
- option: all-namespaces
  value_type: bool
  default_value: "false"
  description: Kubernetes 名前空間のすべてから stack を一覧表示します。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: true
  swarm: false
- option: format
  value_type: string
  description: Pretty-print stacks using a Go template
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: namespace
  value_type: stringSlice
  default_value: '[]'
  description: 対象とする Kubernetes 名前空間を指定します。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: true
  swarm: false
inherited_options:
- option: kubeconfig
  value_type: string
  description: Kubernetes 設定ファイルを指定します。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: true
  swarm: false
- option: orchestrator
  value_type: string
  description: 利用するオーケストレーターを指定します。(swarm|kubernetes|all)
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
examples: |-
  以下のコマンドは、すべての stack とともに、追加情報をいくらか表示します。

  ```bash
  $ docker stack ls

  ID                 SERVICES            ORCHESTRATOR
  myapp              2                   Kubernetes
  vossibility-stack  6                   Swarm
  ```

  ### 書式変更

  書式変更オプション (`--format`) は Go 言語テンプレートを利用して、stack をわかりやすく出力します。

  Valid placeholders for the Go template are listed below:

  | Placeholder     | Description        |
  | --------------- | ------------------ |
  | `.Name`         | Stack name         |
  | `.Services`     | Number of services |
  | `.Orchestrator` | Orchestrator name  |
  | `.Namespace`    | Namespace          |

  When using the `--format` option, the `stack ls` command either outputs
  the data exactly as the template declares or, when using the
  `table` directive, includes column headers as well.

  The following example uses a template without headers and outputs the
  `Name` and `Services` entries separated by a colon (`:`) for all stacks:

  ```bash
  $ docker stack ls --format "{{.Name}}: {{.Services}}"
  web-server: 1
  web-cache: 4
  ```
deprecated: false
min_api_version: "1.25"
experimental: false
experimentalcli: false
kubernetes: false
swarm: false

