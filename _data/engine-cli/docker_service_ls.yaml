command: docker service ls
aliases: list
short: サービス一覧を表示します。
long: |-
  Swarm 内で稼動しているサービスの一覧を表示します。

  > **メモ**
  >
  > これはクラスター管理コマンドであるため、Swarm のマネージャーノード上で実行する必要があります。
  > マネージャーノードとワーカーノードについては、本ドキュメントの [Swarm モード](http://lfstranslation/docker/engine/swarm/) を参照してください。
usage: docker service ls [オプション]
pname: docker service
plink: docker_service.yaml
options:
- option: filter
  shorthand: f
  value_type: filter
  description: 指定された条件に基づいてフィルター検索を行います。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: format
  value_type: string
  description: Go 言語テンプレートを使って出力をフォーマットします。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: quiet
  shorthand: q
  value_type: bool
  default_value: "false"
  description: ID のみを表示します。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
examples: |-
  マネージャーノードにおいて以下を実行します。

  ```bash
  $ docker service ls

  ID            NAME      MODE        REPLICAS    IMAGE
  c8wgl7q4ndfd  frontend  replicated  5/5         nginx:alpine
  dmu1ept4cxcf  redis     replicated  3/3         redis:3.0.6
  iwe3278osahj  mongo     global      7/7         mongo:3.3
  ```

  `REPLICAS` 欄は、サービスにおけるタスクの **実際の数** と **期待される数** を表わしています。

  {: #filtering }
  ### フィルター検索

  フィルターフラグ（`-f` または `--filter`）の指定書式は「キー=値」というものです。
  複数のフィルターが必要な場合は、フラグを複数指定します。
  （たとえば `--filter "foo=bar" --filter "bif=baz"` など。）

  現在サポートされているフィルターは以下のとおりです。

  * [id](service_ls.md#id)
  * [label](service_ls.md#label)
  * [mode](service_ls.md#mode)
  * [name](service_ls.md#name)

  {: #id }
  #### id フィルター

  `id` フィルターは、サービス ID の全部または一部を検索します。

  ```bash
  $ docker service ls -f "id=0bcjw"
  ID            NAME   MODE        REPLICAS  IMAGE
  0bcjwfh8ychr  redis  replicated  1/1       redis:3.0.6
  ```

  {: #label }
  #### label フィルター

  `label` フィルターは、`label` だけが存在する、あるいは `label` とその値が存在するサービスを検索します。

  以下の例では `project` ラベルを持ったサービスを抽出します。
  この場合、その値の内容は問いません。

  ```bash
  $ docker service ls --filter label=project
  ID            NAME       MODE        REPLICAS  IMAGE
  01sl1rp6nj5u  frontend2  replicated  1/1       nginx:alpine
  36xvvwwauej0  frontend   replicated  5/5       nginx:alpine
  74nzcxxjv6fq  backend    replicated  3/3       redis:3.0.6
  ```

  以下の例では `project` ラベルに `project-a` という値を持つサービスのみが抽出されます。

  ```bash
  $ docker service ls --filter label=project=project-a
  ID            NAME      MODE        REPLICAS  IMAGE
  36xvvwwauej0  frontend  replicated  5/5       nginx:alpine
  74nzcxxjv6fq  backend   replicated  3/3       redis:3.0.6
  ```

  #### mode

  The `mode` filter matches on the mode (either `replicated` or `global`) of a service.

  The following filter matches only `global` services.

  ```bash
  $ docker service ls --filter mode=global
  ID                  NAME                MODE                REPLICAS            IMAGE
  w7y0v2yrn620        top                 global              1/1                 busybox
  ```

  {: #name }
  #### name フィルター

  `name` フィルターは、サービス名の全部または一部を検索します。

  以下のフィルター指定では、`redis` という文字列を名前に含んだサービスが検索されます。

  ```bash
  $ docker service ls --filter name=redis
  ID            NAME   MODE        REPLICAS  IMAGE
  0bcjwfh8ychr  redis  replicated  1/1       redis:3.0.6
  ```

  {: #formatting }
  ### フォーマット設定

  フォーマット設定オプション（`--format`）により Go 言語のテンプレートを利用して、サービスをわかりやすく出力することができます。

  Go 言語テンプレートによるプレースホルダー（placeholder）は以下のとおりです。

  プレースホルダー | 内容説明
  ------------|------------------------------------------------------------------------------------------
  `.ID`       | Service ID
  `.Name`     | Service name
  `.Mode`     | Service mode (replicated, global)
  `.Replicas` | Service replicas
  `.Image`    | Service image
  `.Ports`    | Service ports published in ingress mode

  `--format` オプションを利用すると `service ls` コマンドは、テンプレートが定めるデータを直接出力します。
  また `table` ディレクティブを利用すると、カラムヘッダーも同時に出力されます。

  以下は、ヘッダーを含めずにテンプレートを利用する例であり、すべてのサービスにおける `ID`、`Mode`、`Replicas` の各項目がコロン（`:`）で区切って表示されます。

  ```bash
  $ docker service ls --format "{{.ID}}: {{.Mode}} {{.Replicas}}"

  0zmvwuiu3vue: replicated 10/10
  fm6uf97exkul: global 5/5
  ```
deprecated: false
min_api_version: "1.24"
experimental: false
experimentalcli: false
kubernetes: false
swarm: true

