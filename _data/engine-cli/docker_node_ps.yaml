command: docker node ps
short: 1 つまたは複数ノードにおいて実行中のタスク一覧を表示します。デフォルトはカレントノードのみです。
long: |-
  Docker が管理しているノード上でのタスクを一覧表示します。
  `-f` または `--filter` フラグを使ってフィルター検索を行うことができます。
  フィルター検索時のオプションの詳細は [フィルター検索](#filtering) の節を参照してください。

  > **メモ**
  >
  > これはクラスター管理コマンドであるため、Swarm のマネージャーノード上で実行する必要があります。
  > マネージャーノードとワーカーノードについては、本ドキュメントの [Swarm モード](http://lfstranslation/docker/engine/swarm/) を参照してください。
usage: docker node ps [オプション] [NODE...]
pname: docker node
plink: docker_node.yaml
options:
- option: filter
  shorthand: f
  value_type: filter
  description: 指定された条件に基づいてフィルター検索を行います。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: format
  value_type: string
  description: Go 言語テンプレートを使って出力をフォーマットします。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: no-resolve
  value_type: bool
  default_value: "false"
  description: ノード ID からノード名にマップしません。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: no-trunc
  value_type: bool
  default_value: "false"
  description: 詳細出力を行います。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: quiet
  shorthand: q
  value_type: bool
  default_value: "false"
  description: タスク ID のみを表示します。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
examples: |-
  ```bash
  $ docker node ps swarm-manager1
  NAME                                IMAGE        NODE            DESIRED STATE  CURRENT STATE
  redis.1.7q92v0nr1hcgts2amcjyqg3pq   redis:3.0.6  swarm-manager1  Running        Running 5 hours
  redis.6.b465edgho06e318egmgjbqo4o   redis:3.0.6  swarm-manager1  Running        Running 29 seconds
  redis.7.bg8c07zzg87di2mufeq51a2qp   redis:3.0.6  swarm-manager1  Running        Running 5 seconds
  redis.9.dkkual96p4bb3s6b10r7coxxt   redis:3.0.6  swarm-manager1  Running        Running 5 seconds
  redis.10.0tgctg8h8cech4w0k0gwrmr23  redis:3.0.6  swarm-manager1  Running        Running 5 seconds
  ```

  {: #filtering }
  ### フィルター検索

  フィルターフラグ（`-f` または `--filter`）の指定書式は「キー=値」というものです。
  複数のフィルターが必要な場合は、フラグを複数指定します。
  （たとえば `--filter "foo=bar" --filter "bif=baz"` など。）

  現在サポートされているフィルターは以下のとおりです。

  * [name](#name)
  * [id](#id)
  * [label](#label)
  * [desired-state](#desired-state)

  {: #name }
  #### name フィルター

  `name` フィルターは、タスク名の全部または一部を検索します。

  以下のフィルター指定では、`redis` という文字列を名前に含んだタスクすべてが検索されます。

  ```bash
  $ docker node ps -f name=redis swarm-manager1

  NAME                                IMAGE        NODE            DESIRED STATE  CURRENT STATE
  redis.1.7q92v0nr1hcgts2amcjyqg3pq   redis:3.0.6  swarm-manager1  Running        Running 5 hours
  redis.6.b465edgho06e318egmgjbqo4o   redis:3.0.6  swarm-manager1  Running        Running 29 seconds
  redis.7.bg8c07zzg87di2mufeq51a2qp   redis:3.0.6  swarm-manager1  Running        Running 5 seconds
  redis.9.dkkual96p4bb3s6b10r7coxxt   redis:3.0.6  swarm-manager1  Running        Running 5 seconds
  redis.10.0tgctg8h8cech4w0k0gwrmr23  redis:3.0.6  swarm-manager1  Running        Running 5 seconds
  ```

  {: #id }
  #### id フィルター

  `id` フィルターはタスク ID を検索します。

  ```bash
  $ docker node ps -f id=bg8c07zzg87di2mufeq51a2qp swarm-manager1

  NAME                                IMAGE        NODE            DESIRED STATE  CURRENT STATE
  redis.7.bg8c07zzg87di2mufeq51a2qp   redis:3.0.6  swarm-manager1  Running        Running 5 seconds
  ```

  {: #label }
  #### label フィルター

  `label` フィルターは、`label` だけが存在する、あるいは `label` とその値が存在するタスクを検索します。

  以下の例では `usage` ラベルを持ったタスクを抽出します。
  この場合、その値の内容は問いません。

  ```bash
  $ docker node ps -f "label=usage"

  NAME                               IMAGE        NODE            DESIRED STATE  CURRENT STATE
  redis.6.b465edgho06e318egmgjbqo4o  redis:3.0.6  swarm-manager1  Running        Running 10 minutes
  redis.7.bg8c07zzg87di2mufeq51a2qp  redis:3.0.6  swarm-manager1  Running        Running 9 minutes
  ```


  {: #desired-state }
  #### desired-state フィルター

  `desired-state` フィルターには `running`、`shutdown`、`accepted` を指定することができます。


  {: #formatting }
  ### フォーマット設定

  フォーマット設定オプション（`--format`）により Go 言語のテンプレートを利用して、タスクをわかりやすく出力することができます。

  Go 言語テンプレートによるプレースホルダー（placeholder）は以下のとおりです。

  プレースホルダー | 内容説明
  ----------------|------------------------------------------------------------------------------------------
  `.ID`           | タスク ID。
  `.Name`         | タスク名。
  `.Image`        | タスクイメージ。
  `.Node`         | ノード ID。
  `.DesiredState` | タスクの期待する状態。（`running`、`shutdown`、`accepted`）
  `.CurrentState` | タスクの現在の状態。
  `.Error`        | エラー。
  `.Ports`        | タスクの公開ポート。

  `--format` オプションを利用すると `node ps` コマンドは、テンプレートが定めるデータを直接出力します。
  また `table` ディレクティブを利用すると、カラムヘッダーも同時に出力されます。

  以下は、ヘッダーを含めずにテンプレートを利用する例であり、すべてのタスクにおける `Name`、`Image` の各項目がコロン（`:`）で区切って表示されます。

  ```bash
  $ docker node ps --format "{{.Name}}: {{.Image}}"
  top.1: busybox
  top.2: busybox
  top.3: busybox
  ```
deprecated: false
min_api_version: "1.24"
experimental: false
experimentalcli: false
kubernetes: false
swarm: true

