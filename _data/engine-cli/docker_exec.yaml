command: docker exec
short: 実行中のコンテナー内でコマンドを実行します。
long: |-
  `docker exec`コマンドを、実行中のコンテナー内において新たなコマンドを実行します。

  `docker exec`を使って指示されるコマンドは、コンテナーの主要プロセス（`PID 1`）が実行中である場合のみ実行されます。
  そしてコンテナーが再起動された際には、再実行されません。

  COMMAND はコンテナーのデフォルトディレクトリにおいて実行されます。
  コンテナーの元になるイメージが、Dockerfile 内の WORKDIR ディレクティブの指定により、特定ディレクトリを指定している場合は、そのディレクトリにおいて実行されます。

  COMMAND は実行可能である必要があり、連結されていたりクォートで囲まれていたりすると動作しません。
  例として`docker exec -ti my_container "echo a && echo b"`は動作しませんが、`docker exec -ti my_container sh -c "echo a && echo b"`であれば動作します。
usage: docker exec [オプション] CONTAINER COMMAND [ARG...]
pname: docker
plink: docker.yaml
options:
- option: detach
  shorthand: d
  value_type: bool
  default_value: "false"
  description: 'デタッチモード。つまりコマンドをバックグラウンドで実行します。'
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: detach-keys
  value_type: string
  description: コンテナーデタッチ時のキーシーケンスをオーバーライドします。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: env
  shorthand: e
  value_type: list
  description: 環境変数を設定します。
  deprecated: false
  min_api_version: "1.25"
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: interactive
  shorthand: i
  value_type: bool
  default_value: "false"
  description: アタッチされていなくても STDIN は開放し続けます。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: privileged
  value_type: bool
  default_value: "false"
  description: コマンドに拡張権限を付与します。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: tty
  shorthand: t
  value_type: bool
  default_value: "false"
  description: 擬似 TTY を割り当てます。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: user
  shorthand: u
  value_type: string
  description: 'ユーザー名または UID。（記述書式t: \<name|uid\>[:\<group|gid\>]）'
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: workdir
  shorthand: w
  value_type: string
  description: コンテナー内部のワーキングディレクトリ。
  deprecated: false
  min_api_version: "1.35"
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
examples: |-
  {: #run-docker-exec-on-a-running-container }
  ### 実行中コンテナーでの`docker exec`実行

  はじめにコンテナーを起動させます。

  ```bash
  $ docker run --name ubuntu_bash --rm -i -t ubuntu bash
  ```

  上では`ubuntu_bash`という名のコンテナーが生成されて、Bash セッションが起動します。

  次にそのコンテナー上においてコマンドを実行します。

  ```bash
  $ docker exec -d ubuntu_bash touch /tmp/execWorks
  ```

  これはバックグラウンドで実行中のコンテナー`ubuntu_bash`内において、新規ファイル`/tmp/execWorks`を生成します。

  次にそのコンテナー上において、対話形式の`bash`シェルを起動します。

  ```bash
  $ docker exec -it ubuntu_bash bash
  ```

  コンテナー`ubuntu_bash`内において新たな Bash セッションを生成します。

  次にカレントな Bash セッションにおいて環境変数を設定します。

  ```bash
  $ docker exec -it -e VAR=1 ubuntu_bash bash
  ```

  これはコンテナー`ubuntu_bash`内に新たな Bash セッションを生成して、環境変数`$VAR`に "1" を設定します。
  なおこの環境変数は、カレントな Bash セッション内においてのみ有効です。

  デフォルトにおいて`docker exec`コマンドは、コンテナーの生成時に設定されたワーキングディレクトリにおいて動作します。

  ```bash
  $ docker exec -it ubuntu_bash pwd
  /
  ```

  コマンドを実行するワーキングディレクトリは変更することができます。

  ```bash
  $ docker exec -it -w /root ubuntu_bash pwd
  /root
  ```


  {: #try-to-run-docker-exec-on-a-paused-container }
  ### 停止中コンテナーでの`docker exec`実行

  コンテナーが停止中である場合に`docker exec`コマンドを実行すると、エラーが発生します。

  ```bash
  $ docker pause test

  test

  $ docker ps

  CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                   PORTS               NAMES
  1ae3b36715d2        ubuntu:latest       "bash"              17 seconds ago      Up 16 seconds (Paused)                       test

  $ docker exec test ls

  FATA[0000] Error response from daemon: Container test is paused, unpause the container before exec

  $ echo $?
  1
  ```
deprecated: false
experimental: false
experimentalcli: false
kubernetes: false
swarm: false

