command: docker node ls
aliases: list
short: Swarm 内ノードを一覧表示します。
long: |-
  Swarm マネージャーが管理するノードを一覧表示します。
  `-f` または `--filter` フラグを使ってフィルター検索を行うことができます。
  フィルター検索時のオプションの詳細は [フィルター検索](#filtering) の節を参照してください。

  > **メモ**
  >
  > これはクラスター管理コマンドであるため、Swarm のマネージャーノード上で実行する必要があります。
  > マネージャーノードとワーカーノードについては、本ドキュメントの [Swarm モード](http://lfstranslation/docker/engine/swarm/) を参照してください。
usage: docker node ls [オプション]
pname: docker node
plink: docker_node.yaml
options:
- option: filter
  shorthand: f
  value_type: filter
  description: 指定された条件に基づいてフィルター検索を行います。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: format
  value_type: string
  description: Go 言語テンプレートを使って出力をフォーマットします。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: quiet
  shorthand: q
  value_type: bool
  default_value: "false"
  description: ID のみを表示します。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
examples: |-
  ```bash
  $ docker node ls

  ID                           HOSTNAME        STATUS  AVAILABILITY  MANAGER STATUS
  1bcef6utixb0l0ca7gxuivsj0    swarm-worker2   Ready   Active
  38ciaotwjuritcdtn9npbnkuz    swarm-worker1   Ready   Active
  e216jshn25ckzbvmwlnh5jr3g *  swarm-manager1  Ready   Active        Leader
  ```
  > **メモ**
  >
  > 上の例における出力では、隠れ項目として `.Self` があります。
  > そのノードが、カレントな Docker デーモンとしてのノードであることを表わします。
  > アスタリスク `*`（例では `e216jshn25ckzbvmwlnh5jr3g *`）は、それがカレントな Docker デーモンのノードであることを意味しています。


  {: #filtering }
  ### フィルター検索

  フィルターフラグ（`-f` または `--filter`）の指定書式は「キー=値」というものです。
  複数のフィルターが必要な場合は、フラグを複数指定します。
  （たとえば `--filter "foo=bar" --filter "bif=baz"` など。）

  現在サポートされているフィルターは以下のとおりです。

  * [id](#id)
  * [label](#label)
  * [membership](#membership)
  * [name](#name)
  * [role](#role)

  {: #id }
  #### id フィルター

  `id` フィルターは、ノード ID の全部または一部を検索します。

  ```bash
  $ docker node ls -f id=1

  ID                         HOSTNAME       STATUS  AVAILABILITY  MANAGER STATUS
  1bcef6utixb0l0ca7gxuivsj0  swarm-worker2  Ready   Active
  ```

  {: #label }
  #### label フィルター

  `label` フィルターは、Engine の `label` だけが存在する、あるいは `label` とその値が存在するノードを検索します。
  ノードラベルは、現在のところフィルター検索には用いられません。

  以下の例では `foo` ラベルを持ったノードを抽出します。
  この場合、その値の内容は問いません。

  ```bash
  $ docker node ls -f "label=foo"

  ID                         HOSTNAME       STATUS  AVAILABILITY  MANAGER STATUS
  1bcef6utixb0l0ca7gxuivsj0  swarm-worker2  Ready   Active
  ```

  {: #membership }
  #### membership フィルター

  `membership` フィルターは、`membership` というラベルが存在するノードであって、その値が `accepted` か `pending` であるものを検索します。

  以下の例では、`membership` ラベルにおいて `accepted` が設定されているノードが抽出されます。

  ```bash
  $ docker node ls -f "membership=accepted"

  ID                           HOSTNAME        STATUS  AVAILABILITY  MANAGER STATUS
  1bcef6utixb0l0ca7gxuivsj0    swarm-worker2   Ready   Active
  38ciaotwjuritcdtn9npbnkuz    swarm-worker1   Ready   Active
  ```

  {: #name }
  #### name フィルター

  `name` フィルターは、ノード名の全部または一部を検索します。

  以下のフィルター指定では、`swarm-master` という名前に一致するノードすべてが検索されます。

  ```bash
  $ docker node ls -f name=swarm-manager1

  ID                           HOSTNAME        STATUS  AVAILABILITY  MANAGER STATUS
  e216jshn25ckzbvmwlnh5jr3g *  swarm-manager1  Ready   Active        Leader
  ```

  {: #role }
  #### role フィルター

  `role` フィルターは、`role` というラベルが存在するノードであって、その値が `worker` か `manager` であるものを検索します。

  以下の例では、`manager` ロールが設定されているノードが抽出されます。

  ```bash
  $ docker node ls -f "role=manager"

  ID                           HOSTNAME        STATUS  AVAILABILITY  MANAGER STATUS
  e216jshn25ckzbvmwlnh5jr3g *  swarm-manager1  Ready   Active        Leader
  ```

  {: #formatting }
  ### フォーマット設定

  フォーマット設定オプション（`--format`）により Go 言語のテンプレートを利用して、ノードをわかりやすく出力することができます。

  Go 言語テンプレートによるプレースホルダー（placeholder）は以下のとおりです。

  プレースホルダー | 内容説明
  -----------------|------------------------------------------------------------------------------------------
  `.ID`            | ノード ID。
  `.Self`          | デーモンノード。（`true/false`、`true` は現在の Docker デーモンとノードが同一であることを表わす）
  `.Hostname`      | ノードホスト名。
  `.Status`        | ノードのステータス。
  `.Availability`  | ノードの利用可能性。（"active"、"pause"、"drain"）
  `.ManagerStatus` | ノードのマネージャーのステータス。
  `.TLSStatus`     | ノードの TLS ステータス。（"Ready"、また "Needs Rotation" は TLS 証明書が古い CA により署名されている）
  `.EngineVersion` | Engine バージョン。

  `--format` オプションを利用すると `node ls` コマンドは、テンプレートが定めるデータを直接出力します。
  また `table` ディレクティブを利用すると、カラムヘッダーも同時に出力されます。

  以下は、ヘッダーを含めずにテンプレートを利用する例であり、すべてのノードにおける `ID`、`Hostname`、`TLS Status` の各項目がコロン（`:`）で区切って表示されます。

  ```bash
  $ docker node ls --format "{{.ID}}: {{.Hostname}} {{.TLSStatus}}"
  e216jshn25ckzbvmwlnh5jr3g: swarm-manager1 Ready
  35o6tiywb700jesrt3dmllaza: swarm-worker1 Needs Rotation
  ```
deprecated: false
min_api_version: "1.24"
experimental: false
experimentalcli: false
kubernetes: false
swarm: true

