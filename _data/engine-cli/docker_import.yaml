command: docker import
short: tarball の内容をインポートしてファイルシステムイメージを生成します。
long: |-
  引数には`URL`が指定できます。
  また`-`（ダッシュ）を指定すると`STDIN`からデータを直接入力できます。
  `URL`には、ファイルシステムを含んだアーカイブ（.tar, .tar.gz, .tgz, .bzip, .tar.xz, .txz）を指定するか、Docker ホスト上の個別ファイルを指定します。
  アーカイブを指定した場合、Docker はそれをコンテナー内において、`/`（ルート）からの相対位置に伸張（展開）します。
  個別のファイルを指定する場合には、ホスト内のフルパスの指定でなければなりません。
  リモートからインポートを行う場合、`http://`または`https://`プロトコルによる`URI`を指定します。

  `--change`オプションは、生成されたイメージに対して`Dockerfile`命令を適用します。
  サポートされている`Dockerfile`命令は以下のとおりです。
  `CMD`|`ENTRYPOINT`|`ENV`|`EXPOSE`|`ONBUILD`|`USER`|`VOLUME`|`WORKDIR`
usage: docker import [オプション] file|URL|- [REPOSITORY[:TAG]]
pname: docker
plink: docker.yaml
options:
- option: change
  shorthand: c
  value_type: list
  description: 生成したイメージに対して Dockerfile 命令を適用します。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: message
  shorthand: m
  value_type: string
  description: インポートしたイメージに対するコミットメッセージを設定します。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: platform
  value_type: string
  description: サーバーがマルチプラットフォームに対応している場合に、プラットフォームを指定します。
  deprecated: false
  min_api_version: "1.32"
  experimental: true
  experimentalcli: false
  kubernetes: false
  swarm: false
examples: |-
  {: #import-from-a-remote-location }
  ### リモートからのインポート

  以下は、新たなタグなしのイメージを生成します。

  ```bash
  $ docker import http://example.com/exampleimage.tgz
  ```

  {: #import-from-a-local-file }
  ### ローカルファイルからのインポート

  - パイプと`STDIN`を通じてインポートします。

    ```bash
    $ cat exampleimage.tgz | docker import - exampleimagelocal:new
    ```

  - コミットメッセージをつけてインポートします。

    ```bash
    $ cat exampleimage.tgz | docker import --message "New image imported from tarball" - exampleimagelocal:new
    ```

  - ローカルのアーカイブからインポートします。

    ```bash
    $ docker import /path/to/exampleimage.tgz
    ```

  {: #import-from-a-local-directory }
  ### ローカルディレクトリからのインポート

  ```bash
  $ sudo tar -c . | docker import - exampleimagedir
  ```

  {: #import-from-a-local-directory-with-new-configurations }
  ### 新たな設定を加えて、ローカルディレクトリからのインポート

  ```bash
  $ sudo tar -c . | docker import --change "ENV DEBUG=true" - exampleimagedir
  ```

  上の例においては`sudo`を用いています。
  tar によりアーカイブを生成する際には、ファイルの所有権（特に root 所有権）は保持しておかなければなりません。
  tar 処理の際に root（sudo コマンド）ではない場合、所有権が保持されないことになります。
deprecated: false
experimental: false
experimentalcli: false
kubernetes: false
swarm: false

