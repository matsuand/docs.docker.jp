command: docker node update
short: ノードを更新します。
long: |-
  ノードに関するメタデータを更新します。
  たとえば利用状態（availability）、ラベル、ロールなどです。

  > **メモ**
  >
  > これはクラスター管理コマンドであるため、Swarm のマネージャーノード上で実行する必要があります。
  > マネージャーノードとワーカーノードについては、本ドキュメントの [Swarm モード](http://lfstranslation/docker/engine/swarm/) を参照してください。
usage: docker node update [オプション] NODE
pname: docker node
plink: docker_node.yaml
options:
- option: availability
  value_type: string
  description: ノードの利用状態（availability）。("active"|"pause"|"drain")
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: label-add
  value_type: list
  description: ノードのラベルを追加または更新します。(key=value)
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: label-rm
  value_type: list
  description: ノードにラベルが存在している場合に削除します。
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: role
  value_type: string
  description: ノードのロール（role）。 ("worker"|"manager")
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
examples: |-
  {: #add-label-metadata-to-a-node }
  ### ラベルのメタデータをノードに追加

  ノードラベルを用いてメタデータを Swarm ノードに追加します。
  ノードラベルは、キーに対して空の値を設定することができます。

  ``` bash
  $ docker node update --label-add foo worker1
  ```

  複数ラベルをノードに加えるには、`--label-add` フラグを各ラベル指定に利用します。

  ```bash
  $ docker node update --label-add foo --label-add bar worker1
  ```

  [サービスの生成](service_create.md) を行う際には、ノードラベルを制約として設定することができます。
  この制約は、ノードにおけるスケジューラーが、サービスに対するタスクのデプロイを制限します。

  たとえば `type` ラベルを追加し、ノードにおけるスケジューラーが、メッセージキューサービスタスクをデプロイするものとするには、以下のようにします。

  ``` bash
  $ docker node update --label-add type=queue worker1
  ```

  `docker node update` を使ってノードに設定するラベルは、Swarm 内にあるノードエンティティにのみ適用されます。
  これを [dockerd](dockerd.md) に対する Docker デーモンラベルと混同しないように注意してください。

  ラベルに関する詳細は [独自メタデータの適用](http://lfstranslation/docker/engine/userguide/labels-custom-metadata/) を参照してください。
deprecated: false
min_api_version: "1.24"
experimental: false
experimentalcli: false
kubernetes: false
swarm: true

